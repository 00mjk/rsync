NEWS for rsync 3.0.0 (UNRELEASED)
Protocol: 30 (changed)
Changes since 2.6.9:

  BUG FIXES:

    - Fixed the output of -ii when combined with one of the --*-dest options:
      it now itemizes all the items, not just the changed ones.

    - Made the output of all file types consistent when using a --*-dest
      option.  Prior versions used to output too many creation events for
      matching items.

    - The code that waits for a child pid now handles being interrupted by a
      signal.  This fixes a problem with the pre-xfer exec function not being
      able to get the exit status from the script.

    - A negated filter rule now sends the negation option when sending the
      filter rules.

    - Fixed a problem with the --out-format (aka --log-format) option:  it
      would output superfluous directory information for a non-daemon rsync.

    - Fixed a problem with -vv (double --verbose) and --stats when "pushing"
      files (which includes local copies).  Version 2.6.9 would complete the
      copy, but exit with an error when the receiver output its memory stats.

    - If --password-file is used on a non-daemon transfer, rsync now complains
      and exits.  This should help users figure out that they can't use this
      option to control a remote shell's password prompt.

    - Make sure that directory permissions of a newly-created destination
      directory are handled right when --perms is left off.

  ENHANCEMENTS:

    - A new incremental-recursion algorithm is now used when rsync is talking
      to another 3.0.0 version.  This starts the transfer going more quickly
      (before all the files have been found), and requires much less memory.
      See the --recursive option in the manpage for some restrictions.

    - The default --delete algorithm is now --delete-during when talking to a
      3.x rsync.  This is a faster scan than using --delete-before (which is
      the default when talking to older rsync versions), and is compatible with
      the new incremental recursion mode.

    - Added the --delete-delay option, which is a more efficient way to delete
      files at the end of the transfer without needing a separate delete pass.

    - Added the --acls (-A) option to preserve Access Control Lists.  This is
      an improved version of the prior patch that was available.  (If you need
      to have backward compatibility with old, patched versions, the new
      acls.diff patch that will add that.)

    - Added the --xattrs (-X) option to preserver extended attributes.  This is
      an improved version of the prior patch that was available.  (If you need
      to have backward compatibility with old, patched versions, the new
      xattrs.diff patch that will add that.)

    - Added the --fake-super option that allows a non-super user to preserve
      all attributes of a file by using a special extended-attribute idiom.
      There is also an analogous "fake super" option for an rsync daemon.

    - Added the --iconv option, which allows rsync to convert filenames from
      one character set to another during the transfer.  (Currently must be
      manually enabled via configure's --enable-iconv option.)

    - You may specify --max-delete=0 to a 3.0.0 client as long as the receiving
      side is at least version 3.0.0.  This means that you can pull from an
      older rsync with this option, but pushing to an older rsync will generate
      an error.  *Be sure to never specify a 0 value to an older rsync client,
      or it will be silently ignored.*

    - The --hard-link option now uses less memory on both the sending and
      receiving side for all protocol versions.  For protocol 30, the use of a
      hashtable on the sending side allows us to more efficiently convey to the
      receiver what files are linked together.  This reduces the amount of data
      sent over the socket by a considerable margin (rather than adding more
      data), and limits the in-memory storage of the device+inode information
      to just the sending side for the new protocol 30, or to the receiving
      side when speaking an older protocol (note that older rsync versions kept
      the device+inode information on both sides).

  INTERNAL:

    - Rsync now supports the transfer of 64-bit timestamps (time_t values).

    - Fixed a build problem with older (2.x) versions of gcc.

    - Added some isType() functions that make dealing with signed characters
      easier without forcing variables via casts.

    - Upgraded the included popt version to 1.10.2 and improved its use of
      string-handling functions.

    - Added missing prototypes for compatibility functions from the lib dir.

    - Configure determines if iconv() has a const arg, allowing us to avoid a
      compiler warning.

    - Made the sending of some numbers more efficient for protocol 30.

    - Make sure that a daemon process doesn't mind if the client was weird and
      omitted the --server option.

    - Improved the use of "const" on pointers.

  DEVELOPER RELATED:

    - Rsync now has a way of handling protocol-version changes during the
      development of a new protocol version.  This exchange of sub-version
      info does not interfere with the {MIN,MAX}_PROTOCOL_VERSION checking
      in older versions (which would be the case if every minor change made
      to the protocol in CVS incremented the main PROTOCOL_VERSION value).
