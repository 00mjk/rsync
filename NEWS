NEWS for rsync 2.6.4 (UNRELEASED)
Protocol: 29 (changed)
Changes since 2.6.3:

  OUTPUT CHANGES:

    - When rsync deletes a directory and outputs a verbose message about
      it, it now appends a trailing slash to the name instead of (only
      sometimes) outputting a preceding "directory " string.

    - The --stats output will contain time file-list time statistics if
      both sides are 2.6.4, or if the local side is 2.6.4 and the files
      are being pushed (since the stats come from the sending side).
  
  BUG FIXES:

    - Restore the list-clearing behavior of "!" in a .cvsignore file (2.6.3
      was only treating it as a special token in an rsync include/exclude
      file).

    - Avoid a mkdir warning when removing a directory in the destination
      that already exists in the --backup-dir.

    - An OS that has a binary mode for its files (such as cygwin0 needed
      setmode(fd, O_BINARY) called on the temp-file we opened with
      mkstemp().  (Fix derived from the cygwin's rsync package.)

    - Fixed a potential hang when verbosity is high, the client side is
      the sender, and the file-list is large.

    - We now check if the OS doesn't support using mknod() for creating
      FIFOs and sockets, and compile-in using mkfifo() and socket() when
      necessary.

    - Fixed an off-by-one error in the handling of --max-delete=N.

    - One place in the code wasn't checking if fork() failed.

    - The "ignore nonreadable" daemon parameter no longer affects symlinks
      that are being copied, even if they point nowhere.

    - If the OS does not have lchown() and its chown() tries to set the
      referent of a symlink (as it should), we no longer try to set the
      user and group of a symlink.

    - The generator now properly runs the hard-link loop and the dir-time
      rewriting loop after we're sure that the redo phase is complete.

    - When --backup was specified with --partial-dir=DIR (where DIR is a
      relative path), the backup code was erroneously trying to backup a
      file that was put into the partial-dir.

  ENHANCEMENTS:

    - Rsync now supports popt's option aliases, which means that you can
      use /etc/popt and/or ~/.popt to create your own option aliases.

    - Added the --delete-during (--del) option which will delete files
      from on the receiving side incrementally as each directory in the
      transfer is being processed (which makes it more efficient than the
      default, before-the-transfer behavior of --delete).  Note that the
      --del option is implemented as an internally-defined popt alias, so
      an rsync daemon that refuses "delete" (which, for safety's sake,
      really matches "delete*") will still refuse all delete options.

    - Added the --copy-dest option, which works like --link-dest except
      that it includes copies of identical files.

    - Added support for specifying multiple --compare-dest, --copy-dest, or
      --link-dest options, but only of a single type. (Promoted from the
      patches dir and enhanced.)

    - Added the --max-size option. (Promoted from the patches dir.)

    - The daemon-mode options were separated from the normal rsync options
      so that they can't be mixed together.  This makes it impossible to
      start a daemon that had improper default option values that could
      cause problems (such as a hang or an abort) when a client connects.

    - The --bwlimit option may now be used in combination with --daemon
      to specify a default value for the daemon side and also a value
      that cannot be exceeded by a user-specified --bwlimit option.

    - Added the "port" parameter to the rsyncd.conf file. (Promoted from
      the patches dir.)

    - In _exit_cleanup(): when we are exiting with a partially-received
      file, we now flush any data in the write-cache before closing the
      partial file.

    - The --inplace support was enhanced to work with --compare-dest,
      --link-dest, and (the new) --copy-dest options.

    - Added the --dirs (-d) option for an easier way to copy directories
      without recursion.

    - Added the --list-only option which is mainly a way for the client to
      put the server into listing mode without needing to resort to any
      option kluges (e.g. the age-old use of "-r --exclude="/*/*" for a
      non-recursive listing).

    - Added the --omit-dir-times (-O) option which will avoid updating the
      modified time for directories when --times was specified.  For a
      really large transfer, this option will avoid an extra pass through
      the file-list at the end of the transfer to tweak all the directory
      times.

    - Added the --filter (-f) option and its helper option, -F.  Filter
      rules are an extension to the existing include/exclude handling
      that also supports nested filter files as well as per-directory
      filter files (like .cvsignore, but with full filter-rule parsing).
      This new option was chosen in order to ensure that all existing
      include/exclude processing remained 100% compatible with older
      versions.

    - Added the --delay-updates option that puts all updated files into
      a temporary directory (by default ".~tmp~", but settable via the
      --partial-dir=DIR option) until the end of the transfer.  This
      makes the updates a little more atomic for a large transfer.

  SUPPORT FILES:

    - Added support/atomic-rsync -- a perl script that will transfer some
      files using rsync, and then move the updated files into place all at
      once at the end of the transfer.  Only works when pulling, and uses
      --link-dest and a parallel hierarchy of files to effect its update.

    - Added support/mnt-excl that takes the /proc/mounts file and
      translates it into a set of excludes that will exclude all mount
      points (even mapped mounts to the same disk).  The excludes are made
      relative to the specified source dir and properly anchored.

    - Added support/savetransfer.c -- a C program that can make a copy of
      all the data that flows over the wire.  This lets you test for data
      corruption (by saving the data on both the sending side and the
      receiving side) or provides a way to help debug a protocol error.

    - Added support/rrsync -- my version of Joe Smith's restricted rsync
      perl script.  This helps to ensure that only certain rsync commands
      can be run by an ssh invocation.

  INTERNAL:

    - Added better checking of the checksum header values that come over
      the socket.

    - Improved the type of some variables for consistency and proper size.

  BUILD CHANGES:

    - Handle an operating system that use mkdev() in place of makedev().
